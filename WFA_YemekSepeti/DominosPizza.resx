<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button11.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/4gIo
        SUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAA
        ABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAA
        ABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAA
        JKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA
        9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAu
        ACAAMgAwADEANv/bAEMAAgEBAgEBAgICAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcK
        DQoKCwwMDAwHCQ4PDQwOCwwMDP/bAEMBAgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAFIAWwMBIgACEQEDEQH/xAAfAAABBQEBAQEB
        AQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEU
        MoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdo
        aWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX
        2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1
        EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXx
        FxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SV
        lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/
        2gAMAwEAAhEDEQA/AP38ooooAKKKKACiiigAooooAKKKKACiiigAooooAM0ZrG+I3gDS/iv8Pde8La7b
        yXWieJdOuNK1CCO4kt3mt542ilUSRssiEozAMjKy5yCCAa/Kj43f8G4l5+yF8E/F3iT9lH4//tD/AA/8
        S6Dp19rOjeE4vEiXGj6ldxwvLHaLFth2+a6hN8rSYLgnODQB+uAORRXzH/wR0/bhX/gob/wTn+GfxLuJ
        lk8Q3umjTfEa4VWj1W0Jt7olFJ2CSRPORSc+XNHnGcV9OUAFFFFABRRRQAUUUUAFFFFABQelFFAH4T+B
        PD37UX7AH/BYH4zfsv8A7N/ib4WeHfDPxLuJfix4YtPHmnXLW0sdwqi6t7N4FZsxOJI9rZBSyDDaxcH0
        jTf2qP8AgqLc/Bbw78QLe5/ZbvtB8TaxZ6HaI9repMLm61JdNi3LkYXz3UkhjhTnBIxXon/Byz8Mr74M
        WnwN/a48OTapperfAHxZDaeIrzSJFtr2fw/qUsdtcR+aFLnDN5KDO1RfzfKdxI898DePvhff/sC/C2S2
        +OPxalkuPGfh+4S1jurtrQWzeKYHE8eLTBcRHzVIYncAcH7pAOw0T9pP/gqcvxi1DwRJ4H/Za1DW9K0i
        01y5UXt7FF9muZ7mCIhvOyWL2k2QBwAvrUEX/BRT/go9ZfA7wn8QJvgp+zde+HfGU+i22nSw69dxzPJq
        13b2lmGQ3Hy5muoQ3XaCSehrs/DPjj4W/wDDcPiiT/hfXxrFi3gfQ1ivPtN79puJRqOrbom/0PJjUFCO
        AMyNye3mFp4x+G0n/BPP4Jwx/G74wSamurfDzz9Oa6uzZ2gXXtIMpj/0TZ+6UM0fzHDRpjcQAQD6D/4J
        Y/8ABS/46ftOftn/ABk+Cfx0+HvgLwT4m+FOmabfzHwzqMl5Hvu/mWN2Z5FbMbK3ykFSCCD2+/q/K3/g
        gTBpPjr/AIKGft2+ONJ1TW/ElhN4u0jw/Y61q8hkvL1LS3uEkDsyI2QQnBUYG0c9a/VKgAooooAKKKKA
        CiiigD51/wCCsHxE+Evw9/4J9fFL/hdmtW+h/D/XNButFvJGjE1zcSXELpFHaxZBlud2GjVSCGTcSoUs
        Pyj/AOCefx7/AG3vFf8AwTI+Cvw38Kfsm3nifQfC97pGvaL4u1vxPb6FHq+n2OrRalZKLeYhgjxxRxiT
        cVaMq6hgQT65/wAHBGiz/CL/AIKK/An44fFr4U+Lvjh+zN4L0l7CbQNFPnwaJ4iluj5F1dWrfu5lmZ7S
        JVkZElZVRi2BFL6t4L/4OT4fiP4R0/X/AA7+x1+2V4g0HVovtFjqWneAhdWl7GSRviljlKOuQRlSRwaA
        MjQNR/4KdeNP2hdW8eaX8IP2Y/h7davolloEtv4p8R3uqQrBa3F5OjqbCbdvLXjgkjGFHAOawIP+Cdf/
        AAUm8Z/CDwv8PdW+OH7Nvgvwn4NfRpdNXw9ot5qdx5mlXNvdWbubu1XJSa1hcjdhtpBGCRXpB/4OINRX
        /myX9twf905b/wCOVz3xG/4Oe9F+D2jQal4u/ZL/AGu/Cun3VytnDdav4KjsYZp2DMsSvLMqlyqsQoOS
        FJxwaAPpX/gkn/wTx8Sf8E9fhd8SLbxx47sfiR44+Knj3UfHuua5aaMulRy3N5HAJIxErsuPMikk+UIo
        84qFAXn6ur5v/wCCa/8AwUds/wDgpT8LNQ8X6X8L/it8ONHt2t30+bxnoy2Eev288Xmx3Nk6u6zw7cZd
        Tj5lwTnj6QoAKKKKACiiigAooooA8J/4KB/sTR/tyfCHTdBh8TXPhHWtB1M6rpeopbPdQJJJZ3NjMk0M
        c0ErI9reXKBoZ4ZonaOWOVGjGd/9iz9lq3/Y8+Adn4Nj1q78SX0moahrmrapPAtst/qN/dy3t3JFApKw
        QmeeTy4QzbE2gvIwZ29XooAK+e/+Chf7C0/7b3grw3BpXjK48D+JPCOoyX+m6j9jlvLdhNbyWs8UsUNx
        bT/NDK4DwXMMinjc0bSRyfQlFAHnP7Jf7Oln+yd+zz4Z+H9jql5rcegQSebqF1FHDJe3E00lxPL5cYEc
        StNLIVjQBY1KovCivRqKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD/9k=
</value>
  </data>
</root>